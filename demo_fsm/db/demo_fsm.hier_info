|demo_fsm
clock => snake_fsm:fsm1.clock
clear => snake_fsm:fsm1.clear
eaten => snake_fsm:fsm1.eaten
hit => snake_fsm:fsm1.hit
KEY[0] => snake_fsm:fsm1.KEY[0]
KEY[1] => snake_fsm:fsm1.KEY[1]
dir[1] << snake_fsm:fsm1.dir[1]
dir[0] << snake_fsm:fsm1.dir[0]
FOOD_S <= snake_fsm:fsm1.FOOD_S
WALK_S <= snake_fsm:fsm1.WALK_S
COLISION_S <= snake_fsm:fsm1.COLISION_S
EAT_S <= snake_fsm:fsm1.EAT_S
GROW_S <= snake_fsm:fsm1.GROW_S
RESET <= snake_fsm:fsm1.RESET


|demo_fsm|snake_fsm:fsm1
clock => GROW_S~reg0.CLK
clock => dir[1]~reg0.CLK
clock => dir[0]~reg0.CLK
clock => RESET~reg0.CLK
clock => EAT_S~reg0.CLK
clock => COLISION_S~reg0.CLK
clock => WALK_S~reg0.CLK
clock => FOOD_S~reg0.CLK
clock => current_state~4.DATAIN
clear => current_state.GROW.OUTPUTSELECT
clear => current_state.EAT_VERIFY.OUTPUTSELECT
clear => current_state.EAT_CHECK.OUTPUTSELECT
clear => current_state.COLISION_VERIFY.OUTPUTSELECT
clear => current_state.COLISION_CHECK.OUTPUTSELECT
clear => current_state.WALK.OUTPUTSELECT
clear => current_state.FOOD.OUTPUTSELECT
clear => current_state.START.OUTPUTSELECT
clear => dir[1]~reg0.PRESET
clear => dir[0]~reg0.PRESET
clear => RESET~reg0.PRESET
clear => EAT_S~reg0.ACLR
clear => COLISION_S~reg0.ACLR
clear => WALK_S~reg0.ACLR
clear => FOOD_S~reg0.ACLR
clear => dir[0].IN1
clear => GROW_S~reg0.ENA
eaten => current_state.DATAB
eaten => Selector0.IN2
hit => current_state.DATAB
hit => current_state.DATAB
KEY[0] => GROW_S.OUTPUTSELECT
KEY[0] => current_state.GROW.OUTPUTSELECT
KEY[0] => current_state.EAT_VERIFY.OUTPUTSELECT
KEY[0] => current_state.EAT_CHECK.OUTPUTSELECT
KEY[0] => current_state.COLISION_VERIFY.OUTPUTSELECT
KEY[0] => current_state.COLISION_CHECK.OUTPUTSELECT
KEY[0] => current_state.WALK.OUTPUTSELECT
KEY[0] => current_state.FOOD.OUTPUTSELECT
KEY[0] => current_state.START.OUTPUTSELECT
KEY[0] => dir[1].OUTPUTSELECT
KEY[0] => dir[0].IN0
KEY[0] => dir[0].OUTPUTSELECT
KEY[0] => FOOD_S~reg0.ENA
KEY[0] => WALK_S~reg0.ENA
KEY[0] => COLISION_S~reg0.ENA
KEY[0] => EAT_S~reg0.ENA
KEY[0] => RESET~reg0.ENA
KEY[1] => GROW_S.OUTPUTSELECT
KEY[1] => current_state.GROW.OUTPUTSELECT
KEY[1] => current_state.EAT_VERIFY.OUTPUTSELECT
KEY[1] => current_state.EAT_CHECK.OUTPUTSELECT
KEY[1] => current_state.COLISION_VERIFY.OUTPUTSELECT
KEY[1] => current_state.COLISION_CHECK.OUTPUTSELECT
KEY[1] => current_state.WALK.OUTPUTSELECT
KEY[1] => current_state.FOOD.OUTPUTSELECT
KEY[1] => current_state.START.OUTPUTSELECT
KEY[1] => dir[0].IN1
KEY[1] => RESET.OUTPUTSELECT
KEY[1] => EAT_S.OUTPUTSELECT
KEY[1] => COLISION_S.OUTPUTSELECT
KEY[1] => WALK_S.OUTPUTSELECT
KEY[1] => FOOD_S.OUTPUTSELECT
dir[1] <= dir[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dir[0] <= dir[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
FOOD_S <= FOOD_S~reg0.DB_MAX_OUTPUT_PORT_TYPE
WALK_S <= WALK_S~reg0.DB_MAX_OUTPUT_PORT_TYPE
COLISION_S <= COLISION_S~reg0.DB_MAX_OUTPUT_PORT_TYPE
EAT_S <= EAT_S~reg0.DB_MAX_OUTPUT_PORT_TYPE
GROW_S <= GROW_S~reg0.DB_MAX_OUTPUT_PORT_TYPE
RESET <= RESET~reg0.DB_MAX_OUTPUT_PORT_TYPE


